version: "2"

services:
    postgres:
        build:
            context: ../../..
            dockerfile: src/postgres/Dockerfile

    github-trigger:
        build:
            context: ../../..
            dockerfile: src/github/trigger/Dockerfile
        environment:
            - INFRABOX_VERSION=test
            - INFRABOX_SERVICE=github-trigger
            - INFRABOX_DATABASE_USER=postgres
            - INFRABOX_DATABASE_PASSWORD=postgres
            - INFRABOX_DATABASE_HOST=postgres
            - INFRABOX_DATABASE_PORT=5432
            - INFRABOX_DATABASE_DB=postgres
            - INFRABOX_GITHUB_CLIENT_ID=myid
            - INFRABOX_GITHUB_CLIENT_SECRET=myscret
            - INFRABOX_GITHUB_WEBHOOK_SECRET=webhooksecret

    api:
        build:
            context: ../../..
            dockerfile: src/api/Dockerfile
        environment:
            - INFRABOX_DATABASE_USER=postgres
            - INFRABOX_DATABASE_PASSWORD=postgres
            - INFRABOX_DATABASE_HOST=postgres
            - INFRABOX_DATABASE_PORT=5432
            - INFRABOX_DATABASE_DB=postgres
            - INFRABOX_DASHBOARD_URL=something
            - INFRABOX_DOCKER_REGISTRY_URL=http://registry
            - INFRABOX_API_URL=http://api
            - INFRABOX_API_PORT=8080
            - INFRABOX_STORAGE_GCS_ENABLED=true
            - INFRABOX_STORAGE_GCS_PROJECT_ID=some-id
            - INFRABOX_STORAGE_GCS_CONTAINER_CONTENT_CACHE_BUCKET=test-cache-bucket
            - INFRABOX_STORAGE_GCS_CONTAINER_OUTPUT_BUCKET=test-output-bucket
            - INFRABOX_STORAGE_GCS_PROJECT_UPLOAD_BUCKET=test-project-upload-bucket
            - INFRABOX_STORAGE_S3_ENABLED=false
            - INFRABOX_GITHUB_ENABLED=true
            - INFRABOX_GITHUB_TRIGGER_HOST=github-trigger
            - INFRABOX_TEST=true
        links:
            - postgres
        command: /bin/sh -c "/wait-for-postgres.sh postgres /project/entrypoint.sh && node /api/dist/server/app.js"
    test:
        build:
            context: ../../..
            dockerfile: infrabox/test/api/Dockerfile
        command: /utils/wait-for-webserver.sh api:8080 /test/entrypoint.sh
        links:
            - postgres
            - api
